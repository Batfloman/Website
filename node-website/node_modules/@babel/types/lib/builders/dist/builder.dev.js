"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = builder;

var _definitions = require("../definitions");

var _validate = require("../validators/validate");

function builder() {
  var type = this;
  var keys = _definitions.BUILDER_KEYS[type];
  var countArgs = arguments.length;

  if (countArgs > keys.length) {
    throw new Error("".concat(type, ": Too many arguments passed. Received ").concat(countArgs, " but can receive no more than ").concat(keys.length));
  }

  var node = {
    type: type
  };

  for (var i = 0; i < keys.length; ++i) {
    var key = keys[i];
    var field = _definitions.NODE_FIELDS[type][key];
    var arg = void 0;
    if (i < countArgs) arg = arguments[i];

    if (arg === undefined) {
      arg = Array.isArray(field["default"]) ? [] : field["default"];
    }

    node[key] = arg;
  }

  for (var _key in node) {
    (0, _validate["default"])(node, _key, node[_key]);
  }

  return node;
}