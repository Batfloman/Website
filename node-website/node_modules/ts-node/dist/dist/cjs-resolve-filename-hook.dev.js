"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.installCommonjsResolveHookIfNecessary = void 0;
/**
 * @internal
 */

function installCommonjsResolveHookIfNecessary(tsNodeService) {
  var Module = require('module');

  var originalResolveFilename = Module._resolveFilename;
  var shouldInstallHook = tsNodeService.options.experimentalResolverFeatures;

  if (shouldInstallHook) {
    Module._resolveFilename = _resolveFilename;
  }

  function _resolveFilename(request, parent, isMain, options) {
    for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    if (!tsNodeService.enabled()) return originalResolveFilename.call.apply(originalResolveFilename, [this, request, parent, isMain, options].concat(rest)); // This is a stub to support other pull requests that will be merged in the near future
    // Right now, it does nothing.

    return originalResolveFilename.call.apply(originalResolveFilename, [this, request, parent, isMain, options].concat(rest));
  }
}

exports.installCommonjsResolveHookIfNecessary = installCommonjsResolveHookIfNecessary;